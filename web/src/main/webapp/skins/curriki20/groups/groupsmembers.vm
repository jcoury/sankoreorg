#**
  * Macro for groups members and membership tools
  *
  *#


#**
  * Group Members
  *
  *#
#macro(groups_members)
#groupsinit()
#groupsheader("members")
#if(!$isGroupMember && ($group.policy=="closed") && !$hasGlobalAdmin)
  $msg.get("groups_members_onlyaccessibletomembers")
#else
  ##----------------------------------------------------------------------------------------------
  ##Start SKE-454
  #if(!$isGuest && $isGroupMember)
    #groupsdisplaywelcome($msg.get("groups_members_about_title") $spaceName $doc.name $isGroupAdmin)
  #end
  ##-----------------------------------------------------------------------------------------------
  ##End SKE-454
  #groups_membershipinfo($groupName)
  #if(!$xwiki.exists("${spaceName}.ManageRoles"))
    #set($discard = $xwiki.copyDocument("Groups_TemplateSpace.ManageRoles", "${spaceName}.ManageRoles"))
  #end
  ##begingroupsection($msg.get("groups_members_list_title"), $msg.get("groups_members_manage_roles"), $xwiki.getURL("${spaceName}.ManageRoles", "view"), "blue", $isGroupAdmin)
  #begingroupsection($msg.get("groups_members_list_title"), "", "", "blue", $isGroupAdmin)
  #if(!$request.type)
    #set($type = "0")
  #else
    #set($type = $request.type)
  #end
  #if(!$isGroupAdmin)
    <div id="groups-members-list-$type" class="groups-members-list">
    #groups_display_members($groupName)
    </div>
  #else
    #groups_display_membersfilters($type)
    <div id="groups-members-list-$type" class="groups-members-list">
    ## show members
    #if($type=="0")
      #groups_display_members($groupName)
    ## show membershiprequests
    #elseif($type=="1")
      #groups_display_open_membershiprequests($groupName)
    ## show denied membershiprequests
    #elseif($type=="2")
      #groups_display_denied_membershiprequests($groupName)
    #elseif($type=="3")
      #groups_display_invitations($groupName)
    #end
    </div>
  #end
  #endgroupsection()
#end
#groupsfooter()
#end


##
##
## page: Groups.WebHomeSheet and Groups.MembersSheet
## Groups membership info
##
#macro(groups_membershipinfo)
#begingroupsection($msg.get("groups_home_membership_title"),"","", "blue", false)
#if($membershipManager.isMember($group))
  <p>$msg.get("groups_home_membership_group_infotxt")</p>
  <div id="groups-members-invite-button" class="center groups-members-button mgn-vrt">
    <a href="$xwiki.getURL("${spaceName}.InviteMembers")" class="button button-confirm">$msg.get("groups_home_membership_group_btt")</a>
  </div>
#else
  #set($gpolicy = $group.policy)
  #if($gpolicy=="open")
  <p>$msg.get("groups_home_membership_open_visitor_infotxt")</p>
  <div class="right mgn-vrt-15">
    <a href="$xwiki.getURL("${spaceName}.JoinGroup")" class="button button-confirm">$msg.get("groups_home_membership_open_visitor_btt")</a>
  </div>
#else
  <p>$msg.get("groups_home_membership_closed_visitor_infotxt")</p>
<div id="groups-members-request-button" class="groups-members-button">
<a href="$xwiki.getURL("${spaceName}.RequestMembership")" class="button button-confirm">
$msg.get("groups_home_membership_closed_visitor_btt")
</a>
</div>
#end
#end
#endgroupsection()
#end

##
## PAGE: Groups.MembersSheet
## Macro to display the members filters in the members page
##
#macro(groups_display_membersfilters $type)
<div id="groups-members-filter">
  $msg.get("groups_members_admin_list_instruction")
  <form action="">
  <span><input type="radio" name="type" value="0" #if($type=="0") checked #end onclick="this.form.submit()" />
  $msg.get("groups_members_admin_list_togglecurrent")</span>
  #if($groupPolicy == "closed")
    #set($mreqs = $membershipManager.getMembershipRequests($group))
    #set($nbmreqs = $!mreqs.size())
    <span><input type="radio" name="type" value="1" #if($type=="1") checked #end onclick="this.form.submit()" />
    $msg.get("groups_members_admin_list_togglepending", [ "$!nbmreqs" ])</span>
    <span><input type="radio" name="type" value="2" #if($type=="2") checked #end onclick="this.form.submit()" />
    $msg.get("groups_members_admin_list_toggledenied")</span>
  #end
  <span><input type="radio" name="type" value="3" #if($type=="3") checked #end onclick="this.form.submit()" />
  $msg.get("groups_members_admin_list_toggleinvitations")</span>
  </form>
</div>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the javascript to edit a member profile
##
#macro(groupsdisplayeditmemberjs)
#groupsajaxjs()
#end
##
#macro(groups_display_memberinfo $memberName $groupName $divid)
  #set($member = $membershipManager.getUser($memberName))
  #if(!$memberdoc.isNew())
  <div class="groups-members-memberpic userpic">
    #if($member.attachmentList.size() == 0)
    <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
    #else
      #foreach ($attach in $member.attachmentList)
      <a href="$member.getURL('view')" ><img src="$member.getAttachmentURL($attach.filename,'download')" width="80" /></a>
      #end
    #end
  </div>
  #end
  #set($memberprofile = $membershipManager.getUserProfile($group, $member))  
  #if($isGroupAdmin || $memberName == $context.user)
  <div class="groups-members-membereditlink">
    <a href="javascript:void()" onclick="editProfile('$memberName','$groupName','$divid'); return false;">$msg.get("groups_members_admin_current_members_editsettings_link")</a>
  </div>
  #end
  #set($memberIsAdmin = $membershipManager.isAdmin($group, $memberName))
  #if($isGroupAdmin)
  #if("$memberName" != "$context.user")
  #if($memberIsAdmin)
  <div class="groups-members-addadmin">
    <a href="javascript:void()" onclick="if (window.confirm(i18nDict['groups_members_admin_current_membersettings_removeadmin_confirm'])) {removeAdmin('$memberName','$groupName');};return false;">$msg.get("groups_members_admin_current_membersettings_removeadmin_link")</a>
  </div>
  #else
  <div class="groups-members-addadmin">
    <a href="javascript:void()" onclick="if (window.confirm(i18nDict['groups_members_admin_current_membersettings_addadmin_confirm'])) {addAdmin('$memberName','$groupName');};return false;">$msg.get("groups_members_admin_current_membersettings_addadmin_link")</a>
  </div>
  #end
  #end  
  #if("$!memberName" != "$context.user")
  <div class="groups-members-remove">
    <a href="javascript:void()" onclick="if (window.confirm(i18nDict['groups_members_admin_current_membersettings_remove_confirm'])) {removeMember('$memberName','$groupName');};return false;">$msg.get("groups_members_admin_current_membersettings_remove_link")</a>
  </div>
  #end
  #end
  
  <div class="groups-members-membername">
    <a href="$member.getURL('view')">$!member.firstName $!member.lastName</a>
    #if($memberIsAdmin)
    ($msg.get('groups.roles.admin.title'))
    #else
      ##set($memberRoles = $sm.getRoles($spaceName, $memberName))
      ##if($memberRoles.size() > 0)
        ##set($firstRole = $xwiki.getDocument($memberRoles.get(0)))
        ##($firstRole.title)
      ##end
    #end
  </div>
  <div class="groups-members-memberprofile">
  #set($profile = $memberprofile.profile)
  #if($profile)
    $profile
  #end
  </div>
#end
##
#macro(groups_display_edit_memberinfo $memberName $groupName $divid)
#set($member = $membershipManager.getUser($memberName))
#if(!$member.isNew())
<div class="groups-members-memberpic userpic">
  #if($member.attachmentList.size()==0)
  <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
  #else
    #foreach ($attach in $member.attachmentList)
    <a href="$mdoc.getURL("view")" ><img src="$member.getAttachmentURL($attach.filename,"download")" width="80" /></a>
    #end
  #end
</div>
#end
#set($memberprofile = $membershipManager.getUserProfile($group, $member))
<div class="groups-members-membername">
  <a href="$member.URL">$!member.firstName $!member.lastName</a>
</div>
<form action="$xwiki.getURL("Groups.SaveUserProfileService")" method="post" onsubmit="document.getElementById('${divid}').parentNode.className = 'groups-members-member'; new iframe(this,{update:'${divid}'}); return false;">
  <div class="groups-members-member-buttons">
  <input type="button"  class="button button-cancel" value="$msg.get("groups_members_admin_current_membersettings_cancel_link")" onclick="cancelEditProfile('${memberName}','${groupName}','${divid}');" /><input type="submit" class="button button-confirm" value="$msg.get("groups_members_admin_current_membersettings_save_link")" />
  </div>
  <input type="hidden" name="user" value="$!memberName" />
  <input type="hidden" name="group" value="$!groupName" />
  <input type="hidden" name="divid" value="$!divid" />
  <input type="hidden" name="xpage" value="plain" />
  $memberprofile.display("profile", "edit")
  ##if($sm.getRoles($spaceName).size() > 0)
  ##<div class="select-roles">$msg.get("groups.members.selectroles")</div>
  ##<div class="instruction">$msg.get("groups.members.selectroles.info")</div>
  ##<select name="roles" multiple size=4>
  ###groupRoleSelector($spaceName false false $memberName)
  ##</select>
  ##foreach($role in $ret_hasRoles) ## {
  ##<input type="hidden" name="hasrole" value="${role}" />
  ###end
  ##<br />
  ###end
  $memberprofile.display("allowNotifications","edit") $msg.get("groups_members_create_membersettings_email")
  <br />
  $memberprofile.display("allowNotificationsFromSelf","edit") $msg.get("groups_members_create_membersettings_changenotice")
</form>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display a member block in the members list
##
#macro(groups_display_member $memberName $groupName $divid)
  #set($mdoc = $xwiki.getDocument($memberName))
  #if(!$mdoc.isNew())
  <div class="groups-members-member">
    <div id="groups-members-memberinfo-$divid" class="groups-members-memberinfo">
    #groups_display_memberinfo("$memberName" "$groupName" "groups-members-memberinfo-$divid")
    </div>
  </div>
  #else
    $msg.get("groups_members_admin_current_membersettings_error")
  #end
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display a single invitation in the invitation list
##
#macro(groups_display_invitation $invitation)
#groupsajaxjs()
<div class="groups-members-invitee">
#set($memberName = $invitation.invitee)
#set($mdoc = $xwiki.getDocument($memberName))
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size() == 0)
  <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
  #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" ><img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
  #end
#end
</div>
<div class="groups-members-inviteeinfo">
  <div class="groups-members-inviteename">
#if($mdoc.isNew())
$memberName
#else
$xwiki.getLocalUserName($memberName)
#end
</div>
<div class="groups-members-inviter">
#set($invitationDate = $xwiki.formatDate($invitation.requestDate,$msg.get("mycurriki.datetimeFormat")))
$msg.get("groups.members.invitedby") $xwiki.getLocalUserName($invitation.inviter) $msg.get("groups.members.on") $invitationDate
</div>
##<div class="groups-members-inviteestatus">
##$msg.get("groups.members.invitestatus") $msg.get("groups.members.invitestatus.${invitation.status}")
##</div>
<div>
<a href="javascript:void()" onclick="cancelInvitation('$invitation.invitee', '$group.name', '$invitation.key'); return false;">$msg.get("groups_members_admin_invitations_cancel_link")</a>
</div>
</div>
</div>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the members lists
##
#macro(groups_display_members $groupName)
  <script src="$xwiki.getSkinFile("Pork.Iframe.js")" type="text/javascript"></script>
  #groupsdisplayeditmemberjs()
  #set($members = $membershipManager.getMemberNames($group))
  ## pagination parameters
  #set($itemsPerPage = 10)
  #if($request.ipp)
    #set($itemsPerPage=$xwiki.parseInt($request.ipp))
  #end
  #set($startIndex = 0)
  #if($request.startIndex)
    #set($startIndex=$xwiki.parseInt($request.startIndex))
  #end
  #set($totalCount=$members.size())
  ## end pagination parameters
  #if($members.size()==0)
    $msg.get("groups_members_admin_current_members_nomembers")
  #else
    #set($endIndex = $startIndex + $itemsPerPage - 1)
    #if($endIndex >= $totalCount)
      #set($endIndex = $totalCount - 1)
    #end
    #foreach($mid in [$startIndex..$endIndex])
      #groups_display_member($members.get($mid) $groupName $mid)
    #end ## foreach
  #end ## if
  #curriki_paginatorargs($msg.get("groups_members_page"),$startIndex,$itemsPerPage,$totalCount,"type=0")
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the open membership requests
##
#macro(groups_display_open_membershiprequests $spaceName)
#groups_membershiprequestsjs()
#set($gdsrid = 0)
#if(!$mreqs)
  #set($mreqs = $membershipManager.getMembershipRequests($group))
#end
#if($mreqs.size() == 0)
  $msg.get("groups_members_admin_pending_nomembershiprequests")
#else
  $msg.get("groups_members_admin_pending_infotxt")
  #foreach($mreq in $mreqs)
    #set($gdsrid = $gdsrid + 1)
    #groups_display_membershiprequest($mreq $gdsrid)
  #end ## foreach
#end ## if
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the denied membership requests
##
#macro(groups_display_denied_membershiprequests $groupName)
#groups_membershiprequestsjs()
#set($gdsrid = 0)
##set($mreqs = $im.getMembershipRequests($groupName, 4))
#set($mreqs = $membershipManager.getMembershipRequestsByStatus($group, "refused"))
#if($mreqs.size() == 0)
  $msg.get("groups_members_admin_denied_nodeniedmembershiprequests")
#else
  $msg.get("groups_members_admin_denied_infotxt")
  #foreach($mreq in $mreqs)
    #set($gdsrid = $gdsrid + 1)
    #groups_display_membershiprequest($mreq $gdsrid)
  #end ## foreach
#end ## if
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the open invitations
##
#macro(groups_display_invitations $groupName)
## TODO
## show invitations
#set($minvites = $membershipManager.getInvitationsSent($group))
#if($minvites.size() == 0)
  $msg.get("groups_members_admin_invitations_infotxt_noinvitations")
#else
  ##$msg.get("groups_members_admin_invitations_infotxt")
  #foreach($minvite in $minvites)
    #groups_display_invitation($minvite)
  #end
#end
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the javascript for
## accepting and rejecting membership requests
##
#macro(groupsajaxjs)
<script type="text/javascript" src="$xwiki.getSkinFile('groups/groups.js', true)"></script>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display a membership request
##
#macro(groups_display_membershiprequest $msreq $gdsrid)
#set($divid = "groups-members-request-$gdsrid")
<div id="$divid" class="groups-members-request">
#set($memberName = $msreq.requester)
#set($mdoc = $xwiki.getDocument($memberName))
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
 #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" >
  <img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
 #end
#end
</div>
<div class="groups-members-request-name">
#if($mdoc.isNew())
$memberName
#else
$xwiki.getLocalUserName($memberName)
#end
</div>
#set($divid = "groups-members-request-info-$gdsrid")
<div id="${divid}" class="groups-members-request-info">
<div class="groups-members-request-links">
## if group admin
#set($memberDisplayName = $xwiki.getLocalUserName($memberName, false))
<a href="javascript:void()" onclick="acceptRequest('$divid', '$spaceName', '$memberName', '$xwiki.curriki.escapeForJS($memberDisplayName)'); return false;">$msg.get("groups_members_admin_pending_accept_link")</a>
#if($msreq.status != "refused" && $msreq.status != "canceled")
<a href="javascript:void()" onclick="rejectRequest('$divid', '$spaceName', '$memberName', '$xwiki.curriki.escapeForJS($memberDisplayName)'); return false;">$msg.get("groups_members_admin_pending_deny_link")</a>
#end
##end
</div>
<div class="groups-members-request-date">
#set($requestDate = $xwiki.formatDate($msreq.requestDate,$msg.get("mycurriki.datetimeFormat")))
$msg.get("groups_members_admin_pending_requested") $requestDate ## $msg.get("groups_members_admin_pending_forrole")
</div>
##<div class="groups-members-request-status">
##$msg.get("groups_members_admin_pending_status") $msg.get("groups_members_request_status_${msreq.status}")
##</div>
<div class="groups-members-request-message">
<div class="groups-members-request-message-label">
$msg.get("groups_members_admin_pending_reasons")
</div>
<div class="groups-members-request-message-content">
$msreq.text
</div>
</div>
</div>
</div>
#end
##
## PAGE: Groups.MembersSheet
## Macro to display the javascript for
## accepting and rejecting membership requests
##
#macro(groups_membershiprequestsjs)
#groupsajaxjs()
#end

#**
 * Service for showing the edit member info form
 *#
#macro(groups_edit_memberinfo)
#set($groupName = $request.group)
#set($user = $request.user)
#set($divid = $!request.divid)
#groupinit($groupName)
#if($isGroupAdmin || $user == $context.user || $hasGlobalAdmin)
  #groups_display_edit_memberinfo($user, $groupName, $divid)
#else
  $msg.groups_needsadminrights
#end
#end


#**
  * Invite Member form
  *#
#macro(groups_invitemember)
#groupsinit()
#groupsheader("members")
#if(!$isGroupMember)
  $msg.get("groups_invitation_onlyaccessibletomembers")
#else
  ##set($spaceTitle = $s.displayTitle)
  ##set($spaceURL="http://"+$s.homeShortcutURL+".groups.curriki.org")
  #if($request.method.toLowerCase()=="post")
    #begingroupsection($msg.get("groups_members_invite_title"),"","","blue",false)
    ##set($im = $xwiki.invitationmanager)
    #set($invitees = $request.getParameter("invitees").split(","))
    #set($text = $request.getParameter("text"))
    ##set($open = ($request.getParameter("open")=="open"))
    ##set($roles = $xwiki.arrayList)
    ##set($roleArray = $!request.getParameterValues('roles'))
    ##foreach($role in $roleArray)
      ##set($discard = $roles.add($role))
    ##end
    #set($map = $xwiki.hashMap)
    #set($oldMessage = $map.put("message", $text))
    #set($invitationSentCount = 0)
    #set($invitationCount = 0)
    #foreach($invitee in $invitees)
      #set($invitationCount = $invitationCount + 1)
      #set($invitee = $invitee.trim())
      #set($sent = $membershipManager.invite($group, $invitee, $text))
      #if($sent == false)
        #if($membershipManager.lastError == "membership_manager.already_invited")        
          #error($msg.get($membershipManager.lastError, [$invitee, $groupTitle]))
        #elseif($membershipManager.lastError == "membership_manager.already_member")
          #error($msg.get($membershipManager.lastError, [$membershipManager.getUser($invitee), $groupTitle]))
        #elseif($membershipManager.lastError == "membership_manager.invalid_email")
          #error($msg.get($membershipManager.lastError, [$invitee]))        
        #else
          #error($msg.get("groups_members_invite_inviteemissing"))
        #end
        ##set($errCode = $context.get("InvitationManagerException").code)
        ##if($errCode == 101001)
          ##error($msg.get("groups_members_invite_inviteemissing"))
        ##elseif($errCode==101002)
          ##error($msg.get("groups_members_invite_emailinvalid", [$invitee]))
        ##elseif($errCode==101003)
          ##error($msg.get("groups_members_invite_alreadyinvited", [$invitee, $spaceTitle]))
        ##elseif($errCode==101004)
          ##error($msg.get("groups_members_invite_alreadymember", [$invitee, $spaceTitle]))
        ##else
          ##error($msg.get("groups_members_invite_failed", [$invitee]))
        ##end
      #else
        #info($msg.get("groups_members_invite_sent",[$invitee]))
        #set($invitationSentCount = $invitationSentCount + 1)
      #end
    #end

    $msg.get("groups_members_invite_report",[$invitationSentCount,$invitationCount])
    #if($invitationSentCount > 0)
      $msg.get("groups_members_invite_statuslink")
    #end
    $msg.get("groups_members_invite_backlink")
    #endgroupsection()
  #else
    #begingroupsection($msg.get("groups_members_invite_title"),"","","blue",false)
    <form action="" method="post">
      $msg.get("groups_members_invite_list_instruction",[$group.title])
      <textarea rows="1" cols="40" name="invitees" value=""></textarea><br />
      $msg.get("groups_members_invite_note_instruction")
      #tooltip("invite_note_instruction",$msg.get("groups_members_invite_note_instruction_tooltip"))
      <textarea name="text" rows="7">
      $msg.get("groups_members_invite_invitefieldtxt", [$group.title, $group.urlShortcut, $xwiki.getUserName($context.user, false)])
      </textarea>
      ##<input id="openInvitationCheckbox" type="checkbox" name="open" value="open" />
      ##<label for="openInvitationCheckbox">$msg.get("groups_members_invite_openinvitation")</label>
      <p class="paragraph button-right"><input type="submit" class="button button-confirm" value="$msg.get("groups_members_invite_btt")" /></p>
    </form>
    #endgroupsection()
  #end
#end
#groupsfooter()
##<div class="tooltips">
##$xwiki.addTooltipJS()
##</div>
#end



#**
  * Show a confirmation form to the user
  *#
#macro(groups_joingroup_confirm $spaceTitle)
#set($userprofile = $sm.getSpaceUserProfile($spaceName,$context.user))
#set($userprofilePage = $sm.getSpaceUserProfilePageName($spaceName,$context.user))
## Set defaults CURRIKI-1681
#set($junk = $userprofile.set("allowNotifications", 1))
#set($junk = $userprofile.set("allowNotificationsFromSelf", 1))
<form action="" method="post">
<p>
<input type="hidden" name="confirm" value="1" />
<input type="hidden" name="code" value="$!request.code" />
<input type="hidden" name="user" value="$!request.user" />
$msg.get("groups_members_join_infotxt",[$spaceTitle])
#tooltip("bio_tooltip",$msg.get("groups_members_join_bio_tooltip"))
<br />
$userprofile.display("profile","edit")
</p>
#if($sm.getRoles($spaceName).size() > 0) ## {
<p>$msg.get("groups.members.selectroles")<br />
<span class="instruction">$msg.get("groups.members.join.selectroles.info")</span><br />
<select name="roles" multiple size=4>
#groupRoleSelector($spaceName false false false)
</select>
</p>
#end ## }
<p><br />
$userprofile.display("allowNotifications","edit") $msg.get("groups_members_create_membersettings_email")
#tooltip("email_tooltip",$msg.get("groups_members_create_membersettings_email_tooltip"))
<br />
$userprofile.display("allowNotificationsFromSelf","edit") $msg.get("groups_members_create_membersettings_changenotice")
<br />
##
##<textarea name="profile" cols="80" rows="7"></textarea>
##
##<br />
##<input type="checkbox" name="allowNotifications" value="1" checked /> $msg.get("groups_members_create_membersettings_email") <br />
##<input type="checkbox" name="allowNotificationsFromSelf" value="1" checked /> $msg.get("groups_members_create_membersettings_changenotice")
</p>
<div class="button-right"><input type="submit" class="button button-confirm" value="$msg.get("groups_members_join_btt",[$spaceTitle])" /></div>
</form>
#end

#**
  * Join Group Form and Action
  *#
#macro(groups_joingroup)
#groupsinit()
#groupsheader("members")
#begingroupsection($msg.get("groups_members_join_title",[$groupTitle]),"", "","blue",false)
#if($context.user == "XWiki.XWikiGuest")
  ## begin user is guest we need to ask him to login or create an account
  #set($redirurl= $logredir.replaceAll("&#38;", "-"))
  #set($regurl = $xwiki.getURL("Main.JoinSankore", "view", "xredirect=${redirurl}"))
  #verbatim($msg.get("groups_members_join_needaccount",[$regurl]))
  #loginbox($logredir)
  ## end user is guest
  ## if user is already a member there is no need to join
#elseif($isGroupMember)
  $msg.get("groups_members_join_alreadymember")
## user is not a member so we can continue
#else  
  #set($user = $request.user)
  #set($key = $request.key)
  #set($accepted = false)
  #if($user && ($user != "") && $key && ($key != ""))
    #set($invitation = $membershipManager.getInvitation($group, $user, $key))
    #set($accepted = $membershipManager.acceptInvitation($group, $invitation))
  #else
    #if($groupPolicy == "open")
      #set($accepted = $membershipManager.join($group))
    #end
  #end
  #if($accepted)    
    $msg.get("groups_members_join_success")  
  #else
    $msg.get("groups_members_join_failure")
  #end
#end ## end if guest
#endgroupsection()
#groupsfooter()
#end


#**
  * Group Members Service
  *  Add/Remove Admin
  *  Cancel invitation
  *#
#macro(groups_members_service)
  #set($groupName = $request.group)
  #set($memberName = $request.user)
  #set($action = $request.action)
  #groupinit($groupName)
  #if(!$hasGlobalAdmin || !$isGroupAdmin)
    $msg.groups_needsadminrights
  #elseif("$!memberName" != "" && "$context.user" != "$memberName")
    #if("$!action" == "promote")
      ## make admin
      #set($ok = $membershipManager.addMemberRole($group, $memberName, "admin"))
      #if($ok) $msg.groups_adminadded #else $msg.groups_cannotaddadmin #end
    #elseif("$!action" == "remove")
      #set($ok = $membershipManager.removeMember($group, $memberName))    
      #if($ok) $msg.groups_memberremoved #else $msg.groups_cannotremovemember #end    
    #elseif("$!action" == "demote")
      #set($ok = $membershipManager.removeMemberRole($group, $memberName, "admin"))
      #if($ok) $msg.groups_adminremoved #else $msg.groups_cannotremoveadmin #end  
    #elseif("$!action" == "cancel")
      ## cancel invitation
      #set($invitation = $membershipManager.getInvitation($group, $memberName, $!request.key))
      #set($ok = $membershipManager.cancelInvitation($group, $invitation))
      #if($ok) $msg.groups_invitationcancelled #else $msg.groups_cannotcancelinvitation #end
    #elseif("$!action" == "reject")
      ## reject membership request
      
    #end
  #else
  #end
#end

#**
  * Groups Accept Membership Request service
  * This handles the call to accept a membership request
  *#
#macro(groups_acceptmembership_service)
##set($sm = $xwiki.csm)
##Loading invitation manager
##set($im = $xwiki.invitationmanager)
##set($spaceName = $request.space)
##set($space = $sm.getSpace($spaceName))
##set($spaceTitle = $space.displayTitle)
##set($spacePolicy = $space.policy)
#set($groupName = $request.group)
#groupinit($groupName)
#if($isGuest)
  $msg.groups_members_accept_request_needtobeloggedin
  ## if user is not member he cannot accept users
#elseif(!$hasAdmin)
  $msg.groups_needsadminrights
#else
  ## we need to verify there is a request from this user
  #set($user = $request.user)
  ## accept invitation
  #set($membershipRequest = $membershipManager.getMembershipRequest($group, $user))
  #set($accept = $membershipManager.acceptMembershipRequest($group, $membershipRequest))
  #if($accept)
    ## we also need to update the space profile with the data in the Map
    SUCCESS
  #else
    $msg.groups_members_accept_request_error
  #end
#end
#end

#**
  * Groups Reject Membership Request service
  * This handles the call to reject a membership request
  *#
#macro(groups_rejectmembership_service)
##set($sm = $xwiki.csm)
##Loading invitation manager
##set($im = $xwiki.invitationmanager)
##set($spaceName = $request.space)
##set($space = $sm.getSpace($spaceName))
##set($spaceTitle = $space.displayTitle)
##set($spacePolicy = $space.policy)
#set($groupName = $request.group)
#groupinit($groupName)
#if($isGuest)
  $msg.groups_members_request_needtobeloggedin
## if user is not member he cannot accept users
#elseif(!$hasAdmin)
  $msg.groups_needsadminrights
#else
  ## we need to verify there is a request for this user
  #set($user = $request.user)
  ## reject invitation
  ##if($im.rejectMembership($spaceName, $user))
  #set($membershipRequest = $membershipManager.getMembershipRequest($group, $user))
  #if($membershipManager.rejectMembershipRequest($group, $membershipRequest))
    SUCCESS
  #else
    $msg.groups_members_reject_request_error
  #end
#end
#end


#**
  * Groups Request Membership Sheet
  *#
#macro(groups_membershiprequest)
#groupsinit()
#groupsheader("members")
#begingroupsection($msg.get("groups_members_request_title",[$groupTitle]),"","","blue",false)
#if($isGuest)
  $msg.get("groups_members_request_needaccount")
#elseif($isGroupMember)
  $msg.get("groups_members_request_alreadymember")
#elseif($request.method.toLowerCase() == "post")
  ##set($im = $xwiki.invitationmanager)
  #set($text = $request.getParameter("text"))
  ## send request (invitee, space, open, text)
  #set($map = $xwiki.hashMap)
  #set($roles = $xwiki.arrayList)
  #set($roleArray = $!request.getParameterValues('roles'))
  #foreach($role in $roleArray)
    #set($discard = $roles.add($role))
  #end
  #if($request.allowNotifications)
    #set($ok = $map.put("allowNotifications", "true"))
  #end
  #if($request.allowNotificationsFromSelf)
    #set($ok = $map.put("allowNotificationsFromSelf", "true"))
  #end
  #set($ok = $map.put("profile", $!request.profile))
  ##$im.requestMembership($spaceName,$text, $roles, $map)
  $membershipManager.join($group, $text)
  $msg.get("groups_members_request_sent",[$groupTitle])
#else
<form action="" method="post">
<p>
$msg.get("groups_members_request_infotxt",[$groupTitle])
<br /><br />
$msg.get("groups_members_request_reasons_instruction")
#tooltip("reasons-tooltip",$msg.get("groups_members_request_reasons_tooltip"))
<textarea name="text" cols="80" rows="7"></textarea>
<br /><br />
$msg.get("groups_members_request_bio_instruction")
#tooltip("bio-tooltip",$msg.get("groups_members_request_bio_tooltip"))
<textarea name="profile" cols="80" rows="7"></textarea>
#*
#if($sm.getRoles($spaceName).size() > 0)
<div class="select-roles">
$msg.get("groups.members.selectroles")
</div>
<div class="instruction">$msg.get("groups.members.invite.selectroles.info")</div>
<select name="roles" multiple size=4>
#groupRoleSelector($spaceName false false false)
</select>
#end
*#

<br />
<input type="checkbox" name="allowNotifications" value="1" checked /> $msg.get("groups_members_create_membersettings_email") #tooltip("email-tooltip",$msg.get("groups_members_create_membersettings_email_tooltip"))<br />
<input type="checkbox" name="allowNotificationsFromSelf" value="1" checked /> $msg.get("groups_members_create_membersettings_changenotice") <br />
<p class="paragraph button-right"><input type="submit" class="button button-confirm" value="$msg.get("groups_members_request_request_btt")" /></p>
</p>
</form>
#end
#endgroupsection()
#groupsfooter()
<div class="tooltips">
$xwiki.addTooltipJS()
</div>
#end


#**
  * Groups View User Profile service
  * This handles the call to view the user profile
  *#
#macro(groups_view_userprofile_service)
#set($groupName = $request.group)
#set($user = $request.user)
#set($divid = $!request.divid)
#groupinit($groupName)
#groups_display_memberinfo($user, $groupName, $divid)
#end

#**
  * Groups Save User Profile service
  * This handles the call to save the user profile
  *#
#macro(groups_save_userprofile_service)
#set($groupName = $request.group)
#set($memberName = $request.user)
#groupinit($groupName)
#set($member = $membershipManager.getUser($memberName))
#if($isGroupAdmin || $memberName == $context.user)
  #set($memberprofile = $membershipManager.getUserProfile($group, $member))
  #set($ok = $memberprofile.updateFromRequest())
  #set($ok = $memberprofile.saveWithProgrammingRights())
  ##set($wantedRoles = $!request.getParameterValues('roles'))
  ##set($hasRoles = $!request.getParameterValues('hasrole'))
  ##groupGetRoles($spaceName false)
  ##foreach($role in $ret_groupRoleNames)
  ##set($hasRole = false)
  ##set($wantsRole = false)
  ##foreach($has in $hasRoles)
  ##if($role == $has)
    ##set($hasRole = true)
  ##end
  ##end
  ##foreach($wanted in $wantedRoles)
  ##if($role == $wanted)
    ##set($wantsRole = true)
  ##end
  ##end
  ##if($hasRole && !$wantsRole)
  ##removeUserFromRole($role $memberName)
  ##elseif(!$hasRole && $wantsRole)
  ##addUserToRole($role $memberName)
  ##end
  ##end
  <div class="groups-members-member-saveinfo">
  $msg.get("groups_members_membersettings_savedone")
  </div>  
  #groups_display_memberinfo($memberName, $groupName, $request.divid)
#else
  $msg.groups_needsadminrights
#end
#end
